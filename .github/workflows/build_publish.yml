name: Build and deploy

on:
  push:
    branches: [ main ]
  pull_request: { }

jobs:
  lint:
    name: "helm lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Replace values in values.yaml
        env:
          IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}"
        run: |
          sed -i -e "s#__IMAGE_NAME__#${IMAGE_NAME}#g" values.yaml
          sed -i -e "s#__TAG__#${GITHUB_SHA}#g" values.yaml
      - uses: BlindfoldedSurgery/github-action-helm@v0.3.0
        with:
          subcommand: lint
          path: .
          strict: true
          namespace: telegram-bots

  build-container-image:
    needs:
      - lint
      - unit-test
      - integration-test
    uses: BlindfoldedSurgery/actions-container/.github/workflows/build-image-docker.yml@v3
    with:
      containerfile: Containerfile
      platform: "linux/arm64"
      push-image: ${{ github.ref_name == github.event.repository.default_branch }}

  deploy:
    name: "Publish to k8s"
    if: github.ref_name == github.event.repository.default_branch
    runs-on: born-prep
    container: ghcr.io/bjoernpetersen/helm:2.0.1
    concurrency: production
    needs: [build-container-image, lint]
    steps:
      - uses: actions/checkout@v4
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Replace values in values.yaml
        env:
          IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}"
        run: |
          sed -i -e "s#__IMAGE_NAME__#${IMAGE_NAME}#g" values.yaml
          sed -i -e "s#__TAG__#${GITHUB_SHA}#g" values.yaml
          sed -i -e "s#__TELEGRAM_TOKEN__#${{ secrets.BOT_TOKEN }}#g" values.yaml
      - name: install helm chart
        uses: BlindfoldedSurgery/github-action-helm@v0.3.0
        with:
          subcommand: upgrade
          ref: .
          release_name: cure-freedom-bot
          namespace: cure-freedom-bot
          atomic: true
          install: true
          kubeconfig: ${{ secrets.BORN_KUBECONFIG_RAW }}

  clean:
    concurrency: cleanup
    needs: [ deploy ]
    uses: BlindfoldedSurgery/actions-container/.github/workflows/clean.yml@v3
